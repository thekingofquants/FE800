# Load the ETF holdings data
df = pd.read_csv("LQD_holdings.csv", skiprows=9)

# 1. Distribution of assets by sector
sector_distribution = df.groupby('Sector')['Weight (%)'].sum().sort_values(ascending=False)

# Top 10 Holdings by Market Value
top_holdings = df.sort_values(by='Market Value', ascending=False).head(10)

# 2. Maturity Profile
df['Maturity Date'] = pd.to_datetime(df['Maturity'], errors='coerce')
df['Maturity Year'] = df['Maturity Date'].dt.year
maturity_counts = df['Maturity Year'].value_counts().sort_index()

# 3. Yield Analysis
yield_distribution = df['YTM (%)']

# 4. Geographical Distribution
location_distribution = df.groupby('Location')['Weight (%)'].sum().sort_values(ascending=False)

# 5. Correlation Analysis
correlation_data = df[['Duration', 'YTM (%)', 'Weight (%)']]
correlation_matrix = correlation_data.corr()

# Plotting the results
fig, axs = plt.subplots(4, 2, figsize=(15, 22))

# Distribution of assets by sector
axs[0, 0].pie(sector_distribution, labels=sector_distribution.index, autopct='%1.1f%%', startangle=90)
axs[0, 0].set_title('Distribution of Assets by Sector')

# Top 10 Holdings by Market Value
axs[0, 1].bar(top_holdings['Name'], top_holdings['Market Value'], color='skyblue')
axs[0, 1].tick_params(axis='x', rotation=45)
axs[0, 1].set_title('Top 10 Holdings by Market Value')
axs[0, 1].set_ylabel('Market Value')
for tick in axs[0, 1].get_xticklabels():
    tick.set_horizontalalignment('right')

# Maturity Profile
axs[1, 0].bar(maturity_counts.index, maturity_counts.values, color='lightgreen')
axs[1, 0].set_title('Maturity Profile')
axs[1, 0].set_xlabel('Maturity Year')
axs[1, 0].set_ylabel('Number of Bonds')

# Yield Distribution
axs[1, 1].hist(yield_distribution, bins=30, color='lightblue', edgecolor='black')
axs[1, 1].set_title('Yield (YTM %) Distribution')
axs[1, 1].set_xlabel('Yield (YTM %)')
axs[1, 1].set_ylabel('Number of Bonds')

# Geographical Distribution
axs[2, 0].pie(location_distribution, labels=location_distribution.index, autopct='%1.1f%%', startangle=90)
axs[2, 0].set_title('Geographical Distribution by Location')

# Correlation Matrix
cax = axs[2, 1].matshow(correlation_matrix, cmap='coolwarm', vmin=-1, vmax=1)
fig.colorbar(cax)
axs[2, 1].set_title('Correlation Matrix', pad=30)
axs[2, 1].set_xticks(range(len(correlation_matrix.columns)))
axs[2, 1].set_yticks(range(len(correlation_matrix.columns)))
axs[2, 1].set_xticklabels(correlation_matrix.columns, rotation=45)
axs[2, 1].set_yticklabels(correlation_matrix.columns)

# Removing the last empty subplot for better layout
fig.delaxes(axs[3, 0])
fig.delaxes(axs[3, 1])

plt.tight_layout()
plt.show()
